from abc import ABC, abstractmethod
from typing import List
from util.flag.flag_finder import FlagFinder


class Exploit(ABC):

    def __init__(self):
        self._flag_finder = FlagFinder()
        self._found_vulnerable_functions = []

    @property
    def flag_finder(self):
        return self._flag_finder

    @property
    def found_vulnerable_functions(self):
        return self._found_vulnerable_functions

    @property
    @abstractmethod
    def name(self) -> str:
        pass

    @property
    @abstractmethod
    def vulnerable_functions(self) -> List[str]:
        pass

    @abstractmethod
    def attempt_exploit(self):
        pass
